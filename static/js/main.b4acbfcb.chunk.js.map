{"version":3,"sources":["lib/helpers/serializer.js","lib/helpers/retry.js","lib/WebRTC.js","lib/helpers/BufferedEventEmitter.js","lib/Channel.js","lib/MultiChannel.js","lib/stores/SimpleStore.js","lib/index.js","utils.js","screens/Create.js","screens/Join.js","screens/Chat.js","App.js","index.js"],"names":["serializer","description","btoa","sdp","token","type","atob","retry","obj","key","func","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","t0","stop","WebRTC","config","classCallCheck","this","connection","_createConnection","dataChannel","createDataChannel","_configureDataChannel","createOffer","offer","setLocalDescription","Error","setRemoteDescription","createAnswer","answer","channel","store","get","sessionDescription","_getAnswerToken","_getSessionDescription","save","buffer","onmessage","e","data","push","onopen","connect","oniceconnectionstatechange","state","iceConnectionState","isDisconnected","isConnected","disconnect","onAnswer","_this","_callee7","_context7","getAnswer","sent","timeout","setUpTimeout","RTCPeerConnection","iceServers","Promise","resolve","onicecandidate","candidate","localDescription","binaryType","BufferedEventEmitter","possibleConstructorReturn","getPrototypeOf","call","_pendingEvents","event","hasListeners","esm_get","prototype","listener","isPending","it","filter","forEach","_ref","EventEmitter","Channel","arguments","length","undefined","uuid","$timeout","didDisconnect","didTimeout","_checkConnected","send","wasConnected","close","$waitAnswer","emit","_clearTimeout","_this2","_checkNotConnected","_this3","setTimeout","clearTimeout","MultiChannel","channel1","channel2","_handleConnection","bind","assertThisInitialized","_handleDisconnection","_handleData","selectedChannel","_subscribeChannel","_clean","getOtherChannel","on","_handleTimeout","otherChannel","$waitChannel2","SimpleStore","url","api","axios","create","baseURL","headers","cache","concat","then","_adaptResponse","value","encodeURIComponent","response","urls","webrtc","lib","createChannel","_createChannel","_callee2","_context2","createSingleChannel","joinSingleChannel","abrupt","apply","joinChannel","_joinChannel","_callee3","_context3","_x","_createSingleChannel","_callee4","id","_ref2","_context4","createConnectionWithOffer","setConnectHandler","setDisconnectHandler","setWaitHandler","setUpTimeoutFor","saveOffer","_x2","_joinSingleChannel","_callee5","_context5","getOffer","createConnectionWithAnswer","saveAnswer","ondatachannel","_ref3","_x3","setStore","newStore","setIceServers","newIceServers","newTimeout","utils","window","location","href","replace","hash","search","querystring","parse","Create","react_default","createElement","link","quickp2p","setState","alert","Component","Join","inviteToken","Chat","messages","input","join","readOnly","rows","ref","textarea","style","width","onChange","target","onKeyDown","_addMessage","focus","content","_this4","toConsumableArray","scrollTop","scrollHeight","App","route","startsWith","Create_Create","Join_Join","Chat_Chat","rel","_listener","addEventListener","forceUpdate","removeEventListener","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b4acbfcb.chunk.js","sourcesContent":["export default {\r\n\tserialize(description) {\r\n\t\treturn btoa(description.sdp);\r\n\t},\r\n\r\n\tdeserialize(token, type) {\r\n\t\treturn { type, sdp: atob(token) };\r\n\t}\r\n};\r\n","export default (obj, key, func) => {\r\n\tobj[key] = async () => {\r\n\t\ttry {\r\n\t\t\tawait func();\r\n\t\t} catch (e) {\r\n\t\t\tif (obj[key]) obj[key]();\r\n\t\t}\r\n\t};\r\n\tobj[key]();\r\n};\r\n","import serializer from \"./helpers/serializer\";\r\nimport retry from \"./helpers/retry\";\r\n\r\nconst CHANNEL_NAME = \"data\";\r\nconst ANSWER_SUFFIX = \"-answer\";\r\n\r\nexport default class WebRTC {\r\n\tconstructor(config) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tasync createConnectionWithOffer() {\r\n\t\ttry {\r\n\t\t\tconst connection = this._createConnection();\r\n\t\t\tconst dataChannel = connection.createDataChannel(CHANNEL_NAME);\r\n\t\t\tthis._configureDataChannel(dataChannel);\r\n\t\t\tconst offer = await connection.createOffer();\r\n\t\t\tawait connection.setLocalDescription(offer);\r\n\t\t\treturn { connection, dataChannel };\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Error initializing channel: Cannot create offer\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync createConnectionWithAnswer(offer) {\r\n\t\ttry {\r\n\t\t\tconst connection = this._createConnection();\r\n\t\t\tawait connection.setRemoteDescription(offer);\r\n\t\t\tconst answer = await connection.createAnswer();\r\n\t\t\tawait connection.setLocalDescription(answer);\r\n\t\t\treturn connection;\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Error initializing channel: Cannot create answer\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync getOffer(channel) {\r\n\t\ttry {\r\n\t\t\tconst sessionDescription = await this.store.get(channel.token);\r\n\t\t\treturn serializer.deserialize(sessionDescription, \"offer\");\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Error joining channel: Cannot read offer data\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync getAnswer(channel) {\r\n\t\ttry {\r\n\t\t\tconst sessionDescription = await this.store.get(\r\n\t\t\t\tthis._getAnswerToken(channel)\r\n\t\t\t);\r\n\t\t\treturn serializer.deserialize(sessionDescription, \"answer\");\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Error joining channel: Cannot read answer data\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync saveOffer(connection, channel) {\r\n\t\ttry {\r\n\t\t\tconst sessionDescription = await this._getSessionDescription(connection);\r\n\t\t\tawait this.store.save(channel.token, sessionDescription);\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Error initializing channel: Cannot write offer data\");\r\n\t\t}\r\n\t}\r\n\r\n\tasync saveAnswer(connection, channel) {\r\n\t\ttry {\r\n\t\t\tconst sessionDescription = await this._getSessionDescription(connection);\r\n\t\t\tawait this.store.save(this._getAnswerToken(channel), sessionDescription);\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(\"Error initializing channel: Cannot write answer data\");\r\n\t\t}\r\n\t}\r\n\r\n\tsetConnectHandler(connection, dataChannel, channel) {\r\n\t\tthis._configureDataChannel(dataChannel);\r\n\t\tdataChannel.buffer = [];\r\n\r\n\t\tdataChannel.onmessage = (e) => {\r\n\t\t\tconst data = e.data;\r\n\t\t\tif (data) dataChannel.buffer.push(data);\r\n\t\t};\r\n\r\n\t\tdataChannel.onopen = () => channel.connect(connection, dataChannel);\r\n\t}\r\n\r\n\tsetDisconnectHandler(connection, channel) {\r\n\t\tconnection.oniceconnectionstatechange = (e) => {\r\n\t\t\tconst state = connection.iceConnectionState;\r\n\t\t\tconst isDisconnected =\r\n\t\t\t\tstate === \"failed\" || state === \"disconnected\" || state === \"closed\";\r\n\t\t\tif (channel.isConnected && isDisconnected) channel.disconnect();\r\n\t\t};\r\n\t}\r\n\r\n\tsetWaitHandler(connection, channel, onAnswer) {\r\n\t\tretry(channel, \"$waitAnswer\", async () => {\r\n\t\t\tconst answer = await this.getAnswer(channel);\r\n\t\t\tawait connection.setRemoteDescription(answer);\r\n\t\t\tonAnswer();\r\n\t\t});\r\n\t}\r\n\r\n\tsetUpTimeoutFor(channel) {\r\n\t\tconst { timeout } = this.config;\r\n\t\tchannel.setUpTimeout(timeout);\r\n\t}\r\n\r\n\tget store() {\r\n\t\tconst { store } = this.config;\r\n\t\tif (!store) throw new Error(\"Store not set, use `.setStore(...)`\");\r\n\r\n\t\treturn store;\r\n\t}\r\n\r\n\t_createConnection() {\r\n\t\treturn new RTCPeerConnection({ iceServers: this.config.iceServers });\r\n\t}\r\n\r\n\t_getSessionDescription(connection) {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tconnection.onicecandidate = (e) => {\r\n\t\t\t\tif (e.candidate !== null) return;\r\n\t\t\t\tresolve(serializer.serialize(connection.localDescription));\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\t_getAnswerToken(channel) {\r\n\t\treturn channel.token + ANSWER_SUFFIX;\r\n\t}\r\n\r\n\t_configureDataChannel(dataChannel) {\r\n\t\tdataChannel.binaryType = \"arraybuffer\";\r\n\t}\r\n}\r\n","import EventEmitter from \"eventemitter3\";\r\n\r\nexport default class BufferedEventEmitter extends EventEmitter {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis._pendingEvents = [];\r\n\t}\r\n\r\n\temit(event, data) {\r\n\t\tconst hasListeners = super.emit(event, data);\r\n\t\tif (!hasListeners) this._pendingEvents.push({ event, data });\r\n\t\treturn hasListeners;\r\n\t}\r\n\r\n\ton(event, listener) {\r\n\t\tsuper.on(event, listener);\r\n\r\n\t\tconst isPending = (it) => it.event === event;\r\n\t\tthis._pendingEvents\r\n\t\t\t.filter(isPending)\r\n\t\t\t.forEach(({ event, data }) => listener(data));\r\n\t\tthis._pendingEvents = this._pendingEvents.filter((it) => !isPending(it));\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n","import BufferedEventEmitter from \"./helpers/BufferedEventEmitter\";\r\nimport uuid from \"uuid/v1\";\r\n\r\nexport default class Channel extends BufferedEventEmitter {\r\n\tconstructor(token = uuid()) {\r\n\t\tsuper();\r\n\r\n\t\tthis.token = token;\r\n\t\tthis.connection = null;\r\n\t\tthis.dataChannel = null;\r\n\t\tthis.$timeout = null;\r\n\r\n\t\tthis.didDisconnect = false;\r\n\t\tthis.didTimeout = false;\r\n\t}\r\n\r\n\tsend(data) {\r\n\t\tthis._checkConnected();\r\n\r\n\t\tthis.dataChannel.send(data);\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.didDisconnect = true;\r\n\r\n\t\tconst wasConnected = this.isConnected;\r\n\t\tif (this.dataChannel) this.dataChannel.close();\r\n\t\tif (this.connection) this.connection.close();\r\n\r\n\t\tthis.connection = null;\r\n\t\tthis.dataChannel = null;\r\n\t\tthis.$waitAnswer = null;\r\n\t\tif (wasConnected) this.emit(\"disconnected\");\r\n\t\tthis._clearTimeout();\r\n\t}\r\n\r\n\tconnect(connection, dataChannel) {\r\n\t\tthis._checkNotConnected();\r\n\r\n\t\tthis.connection = connection;\r\n\t\tthis.dataChannel = dataChannel;\r\n\r\n\t\tconst run = (data) => this.emit(\"data\", data);\r\n\t\tif (dataChannel.buffer) {\r\n\t\t\tdataChannel.buffer.forEach(run);\r\n\t\t\tdelete dataChannel.buffer;\r\n\t\t}\r\n\r\n\t\tthis.dataChannel.onmessage = (e) => {\r\n\t\t\tconst data = e.data;\r\n\t\t\tif (!data) return;\r\n\r\n\t\t\tthis.emit(\"data\", data);\r\n\t\t};\r\n\t\tthis.emit(\"connected\");\r\n\t\tthis._clearTimeout();\r\n\t}\r\n\r\n\tsetUpTimeout(timeout) {\r\n\t\tthis.$timeout = setTimeout(() => {\r\n\t\t\tif (!this.isConnected) {\r\n\t\t\t\tthis.didTimeout = true;\r\n\r\n\t\t\t\tthis.disconnect();\r\n\t\t\t\tthis.emit(\"timeout\");\r\n\t\t\t}\r\n\t\t}, timeout);\r\n\t}\r\n\r\n\tget isConnected() {\r\n\t\treturn this.dataChannel !== null;\r\n\t}\r\n\r\n\t_clearTimeout() {\r\n\t\tclearTimeout(this.$timeout);\r\n\t\tthis.$timeout = null;\r\n\t}\r\n\r\n\t_checkConnected() {\r\n\t\tif (!this.isConnected) throw new Error(\"Error: Not connected\");\r\n\t}\r\n\r\n\t_checkNotConnected() {\r\n\t\tif (this.isConnected) throw new Error(\"Error: Already connected\");\r\n\t}\r\n}\r\n","import BufferedEventEmitter from \"./helpers/BufferedEventEmitter\";\r\n\r\nexport default class MultiChannel extends BufferedEventEmitter {\r\n\tconstructor(channel1, channel2) {\r\n\t\tsuper();\r\n\r\n\t\tthis._handleConnection = this._handleConnection.bind(this);\r\n\t\tthis._handleDisconnection = this._handleDisconnection.bind(this);\r\n\t\tthis._handleData = this._handleData.bind(this);\r\n\r\n\t\tthis.channel1 = channel1;\r\n\t\tthis.channel2 = null;\r\n\t\tthis.selectedChannel = null;\r\n\r\n\t\tthis._subscribeChannel(this.channel1, () => this.channel2);\r\n\t\tif (channel2) this.connect(channel2);\r\n\r\n\t\tthis.didTimeout = false;\r\n\t}\r\n\r\n\tsend(data) {\r\n\t\tthis._checkConnected();\r\n\r\n\t\tthis.selectedChannel.send(data);\r\n\t}\r\n\r\n\tdisconnect() {\r\n\t\tthis.channel1.disconnect();\r\n\t\tif (this.channel2) this.channel2.disconnect();\r\n\t\tthis._clean();\r\n\t}\r\n\r\n\tconnect(channel2) {\r\n\t\tthis.channel2 = channel2;\r\n\t\tthis._subscribeChannel(this.channel2, () => this.channel1);\r\n\t}\r\n\r\n\tget token() {\r\n\t\treturn this.channel1.token;\r\n\t}\r\n\r\n\tget isConnected() {\r\n\t\treturn this.selectedChannel !== null;\r\n\t}\r\n\r\n\t_checkConnected() {\r\n\t\tif (!this.isConnected) throw new Error(\"Error: Not connected\");\r\n\t}\r\n\r\n\t_subscribeChannel(channel, getOtherChannel) {\r\n\t\tchannel\r\n\t\t\t.on(\"connected\", () => {\r\n\t\t\t\tthis._handleConnection(channel);\r\n\t\t\t})\r\n\t\t\t.on(\"disconnected\", () => {\r\n\t\t\t\tthis._handleDisconnection(channel, getOtherChannel());\r\n\t\t\t})\r\n\t\t\t.on(\"timeout\", () => {\r\n\t\t\t\tthis._handleTimeout(channel, getOtherChannel());\r\n\t\t\t})\r\n\t\t\t.on(\"data\", this._handleData);\r\n\t}\r\n\r\n\t_handleConnection(channel) {\r\n\t\tif (this.isConnected) return;\r\n\r\n\t\tthis.selectedChannel = channel;\r\n\t\tthis.emit(\"connected\");\r\n\t}\r\n\r\n\t_handleDisconnection(channel, otherChannel) {\r\n\t\tconst wasConnected = this.isConnected;\r\n\r\n\t\tif (otherChannel && otherChannel.isConnected)\r\n\t\t\tthis.selectedChannel = otherChannel;\r\n\t\telse if (wasConnected) {\r\n\t\t\tthis._clean();\r\n\t\t\tthis.emit(\"disconnected\");\r\n\t\t}\r\n\t}\r\n\r\n\t_handleTimeout(channel, otherChannel) {\r\n\t\tif (\r\n\t\t\t(channel.didTimeout || otherChannel.didTimeout) &&\r\n\t\t\t!this.isConnected &&\r\n\t\t\t!this.didTimeout\r\n\t\t) {\r\n\t\t\tthis.didTimeout = true;\r\n\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.emit(\"timeout\");\r\n\t\t}\r\n\t}\r\n\r\n\t_handleData(data) {\r\n\t\tthis.emit(\"data\", data);\r\n\t}\r\n\r\n\t_clean() {\r\n\t\tthis.selectedChannel = null;\r\n\t\tthis.$waitChannel2 = null;\r\n\t}\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default class SimpleStore {\r\n\tconstructor(url) {\r\n\t\tthis.api = axios.create({\r\n\t\t\tbaseURL: url,\r\n\t\t\theaders: { cache: \"no-cache\" }\r\n\t\t});\r\n\t}\r\n\r\n\tget(key) {\r\n\t\treturn this.api.get(`get/${key}`).then(this._adaptResponse);\r\n\t}\r\n\r\n\tsave(key, value) {\r\n\t\tconst data = encodeURIComponent(value);\r\n\t\treturn this.api.get(`set/${key}/${data}`).then(this._adaptResponse);\r\n\t}\r\n\r\n\t_adaptResponse(response) {\r\n\t\tconst { data } = response;\r\n\t\treturn data.value;\r\n\t}\r\n}\r\n","import WebRTC from \"./WebRTC\";\r\nimport Channel from \"./Channel\";\r\nimport MultiChannel from \"./MultiChannel\";\r\nimport SimpleStore from \"./stores/SimpleStore\";\r\nimport retry from \"./helpers/retry\";\r\n\r\nconst CHANNEL2_SUFFIX = \"-2\";\r\nconst config = {\r\n\tstore: null,\r\n\ticeServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\r\n\ttimeout: 10000\r\n};\r\nconst webrtc = new WebRTC(config);\r\n\r\nexport { SimpleStore };\r\n\r\nexport default {\r\n\tasync createChannel() {\r\n\t\tconst channel1 = await this.createSingleChannel();\r\n\t\tconst channel = new MultiChannel(channel1);\r\n\r\n\t\tretry(channel, \"$waitChannel2\", async () => {\r\n\t\t\tconst channel2 = await this.joinSingleChannel(\r\n\t\t\t\tchannel.token + CHANNEL2_SUFFIX\r\n\t\t\t);\r\n\t\t\tchannel.connect(channel2);\r\n\t\t});\r\n\r\n\t\treturn channel;\r\n\t},\r\n\r\n\tasync joinChannel(token) {\r\n\t\tconst channel1 = await this.joinSingleChannel(token);\r\n\t\tconst channel2 = await this.createSingleChannel(token + CHANNEL2_SUFFIX);\r\n\r\n\t\treturn new MultiChannel(channel1, channel2);\r\n\t},\r\n\r\n\tasync createSingleChannel(id) {\r\n\t\tconst channel = new Channel(id);\r\n\r\n\t\tconst {\r\n\t\t\tconnection,\r\n\t\t\tdataChannel\r\n\t\t} = await webrtc.createConnectionWithOffer();\r\n\r\n\t\twebrtc.setConnectHandler(connection, dataChannel, channel);\r\n\t\twebrtc.setDisconnectHandler(connection, channel);\r\n\t\twebrtc.setWaitHandler(connection, channel, () =>\r\n\t\t\twebrtc.setUpTimeoutFor(channel)\r\n\t\t);\r\n\r\n\t\tawait webrtc.saveOffer(connection, channel);\r\n\r\n\t\treturn channel;\r\n\t},\r\n\r\n\tasync joinSingleChannel(token) {\r\n\t\tconst channel = new Channel(token);\r\n\r\n\t\tconst offer = await webrtc.getOffer(channel);\r\n\t\tconst connection = await webrtc.createConnectionWithAnswer(offer);\r\n\t\tawait webrtc.saveAnswer(connection, channel);\r\n\t\twebrtc.setUpTimeoutFor(channel);\r\n\r\n\t\tconnection.ondatachannel = ({ channel: dataChannel }) => {\r\n\t\t\twebrtc.setConnectHandler(connection, dataChannel, channel);\r\n\t\t};\r\n\t\twebrtc.setDisconnectHandler(connection, channel);\r\n\r\n\t\treturn channel;\r\n\t},\r\n\r\n\tsetStore(newStore) {\r\n\t\tconfig.store = newStore;\r\n\t},\r\n\r\n\tsetIceServers(newIceServers) {\r\n\t\tconfig.iceServers = newIceServers;\r\n\t},\r\n\r\n\tsetTimeout(newTimeout) {\r\n\t\tconfig.timeout = newTimeout;\r\n\t}\r\n};\r\n","import querystring from \"querystring\";\r\n\r\nexport default {\r\n\tgetBaseUrl() {\r\n\t\treturn window.location.href\r\n\t\t\t.replace(window.location.hash, \"\")\r\n\t\t\t.replace(window.location.search, \"\");\r\n\t},\r\n\tgetQueryString() {\r\n\t\treturn querystring.parse(window.location.search.replace(\"?\", \"\"));\r\n\t}\r\n};\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport quickp2p from \"../lib\";\r\n\r\nexport default class Create extends Component {\r\n\tstate = { token: null };\r\n\r\n\trender() {\r\n\t\tif (!this.state.token) return <div>Wait...</div>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tSend this link to your peer and wait...\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<a href={this.link}>{this.link}</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (window.channel) window.channel.disconnect();\r\n\r\n\t\twindow.channel = this.channel = await quickp2p.createChannel();\r\n\t\tthis.setState({ token: this.channel.token });\r\n\r\n\t\tthis.channel.on(\"connected\", () => {\r\n\t\t\twindow.location.hash = \"#/chat\";\r\n\t\t});\r\n\r\n\t\tthis.channel.on(\"timeout\", () => {\r\n\t\t\talert(\"TIMEOUT!\");\r\n\t\t\twindow.location.hash = \"#/\";\r\n\t\t});\r\n\t}\r\n\r\n\tget link() {\r\n\t\tconst url = utils.getBaseUrl();\r\n\t\treturn `${url}?token=${this.state.token}#/join`;\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport quickp2p from \"../lib\";\r\n\r\nexport default class Join extends Component {\r\n\trender() {\r\n\t\tif (!this.inviteToken) return <div>Invalid token.</div>;\r\n\r\n\t\treturn <div>Wait...</div>;\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tif (!this.inviteToken) return;\r\n\t\tif (window.channel) window.channel.disconnect();\r\n\r\n\t\twindow.channel = this.channel = await quickp2p.joinChannel(\r\n\t\t\tthis.inviteToken\r\n\t\t);\r\n\r\n\t\tthis.channel.on(\"connected\", () => {\r\n\t\t\twindow.channel = this.channel;\r\n\t\t\twindow.location.hash = \"#/chat\";\r\n\t\t});\r\n\r\n\t\tthis.channel.on(\"timeout\", () => {\r\n\t\t\talert(\"TIMEOUT!\");\r\n\t\t\twindow.location.hash = \"#/\";\r\n\t\t});\r\n\t}\r\n\r\n\tget inviteToken() {\r\n\t\treturn utils.getQueryString().token || null;\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Chat extends Component {\r\n\tstate = { messages: [], input: \"\" };\r\n\r\n\trender() {\r\n\t\tif (!window.channel) return <div>No connection.</div>;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tvalue={this.state.messages.join(\"\\n\")}\r\n\t\t\t\t\treadOnly\r\n\t\t\t\t\trows={15}\r\n\t\t\t\t\tref={(textarea) => (this.textarea = textarea)}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={this.state.input}\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tthis.setState({ input: e.target.value });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tconst { input } = this.state;\r\n\r\n\t\t\t\t\t\tif (e.key === \"Enter\" && input) {\r\n\t\t\t\t\t\t\twindow.channel.send(input);\r\n\t\t\t\t\t\t\tthis.setState({ input: \"\" });\r\n\t\t\t\t\t\t\tthis._addMessage(`Me: ${input}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tref={(input) => (this.input = input)}\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst channel = window.channel;\r\n\t\tif (!channel) return;\r\n\r\n\t\tchannel.on(\"data\", (data) => {\r\n\t\t\tthis._addMessage(`Stranger: ${data}`);\r\n\t\t});\r\n\r\n\t\tchannel.on(\"disconnected\", () => {\r\n\t\t\talert(\"DISCONNECTED!\");\r\n\t\t\twindow.location.hash = \"#/\";\r\n\t\t});\r\n\r\n\t\tthis.input.focus();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (!window.channel) return;\r\n\r\n\t\twindow.channel.disconnect();\r\n\t\twindow.channel = undefined;\r\n\t}\r\n\r\n\t_addMessage(content) {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tmessages: [...this.state.messages, content]\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.textarea.scrollTop = this.textarea.scrollHeight;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from \"react\";\nimport quickp2p, { SimpleStore } from \"./lib\";\nimport Create from \"./screens/Create\";\nimport Join from \"./screens/Join\";\nimport Chat from \"./screens/Chat\";\n\nquickp2p.setStore(new SimpleStore(\"https://misc.r-labs.io\"));\n\nexport default class App extends Component {\n\trender() {\n\t\tconst route = window.location.hash;\n\n\t\tif (route.startsWith(\"#/create\")) return <Create />;\n\t\tif (route.startsWith(\"#/join\")) return <Join />;\n\t\tif (route.startsWith(\"#/chat\")) return <Chat />;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Valid urls:</h1>\n\t\t\t\t<a href=\"#/create\">/#/create</a>\n\t\t\t\t<br />\n\t\t\t\t/#/join?token=INVITE_TOKEN\n\t\t\t\t<br />\n\t\t\t\t<br />>{\" \"}\n\t\t\t\t<a\n\t\t\t\t\thref=\"https://github.com/afska/quickp2p\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tSource code and instructions\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentWillMount() {\n\t\tthis._listener = window.addEventListener(\"hashchange\", (e) => {\n\t\t\tthis.forceUpdate();\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"hashchange\", this._listener);\n\t}\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}